on: 
  push:
    branches:
      - master
name: Build | Test | Create Release

jobs:
  build:
    if: "! contains(toJSON(github.event.pusher.email), 'bot@action.build')"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x, 10.x]
    steps:
    - uses: actions/checkout@v2
      with:
        clean: true
        fetch-depth: 0
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
        registry-url: https://registry.npmjs.org/
    - name: Install
      run: |
        yarn install
        yarn lerna bootstrap
    - name: Unit Tests
      run: yarn run lerna run test -- -- --coverage
  relese:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          clean: true
          fetch-depth: 0
      - name: Use Node.js 12
        uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
      - name: Install
        run: yarn install
      - name: Bump the version Up
        run: yarn run lerna version prepatch $(curl https://api.github.com/repos/${{ github.repository }}/releases | jq -r '.[0].tag_name | ""') --no-push --no-git-tag-version --yes
      - name: Read Version from Leran
        id: version
        uses: notiz-dev/github-action-json-property@release
        with: 
            path: 'lerna.json'
            prop_path: 'version'
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{steps.version.outputs.prop}} 
          release_name: Release ${{steps.version.outputs.prop}} 
          body: "Auto Release Create Tag"
          draft: true
          prerelease: false
